<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fc.dao.HetongMapper">
    <resultMap id="BaseResultMap" type="com.fc.bean.Hetong">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="chuzu" jdbcType="VARCHAR" property="chuzu"/>
        <result column="chuzu_idcard" jdbcType="VARCHAR" property="chuzuIdcard"/>
        <result column="zuke" jdbcType="VARCHAR" property="zuke"/>
        <result column="zuke_idcard" jdbcType="VARCHAR" property="zukeIdcard"/>
        <result column="fromdate" jdbcType="VARCHAR" property="fromdate"/>
        <result column="todate" jdbcType="VARCHAR" property="todate"/>
        <result column="house_id" jdbcType="VARCHAR" property="houseId"/>
        <result column="payday" jdbcType="INTEGER" property="payday"/>
        <association property="houselist" javaType="com.fc.bean.Houselist">
            <id column="id" property="id"/>
            <id column="houseid" property="houseid"/>
            <result column="address" property="address"/>
            <result column="area" property="area"/>
            <result column="price" property="price"/>
            <result column="status" property="status"/>
        </association>
        <association property="zulist" javaType="com.fc.bean.Zulist">
            <id column="zid" property="zid"/>
            <id column="house_id" property="houseId"/>
            <result column="userlist_id" property="userlistId"/>
            <result column="contract_id" property="contractId"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , chuzu, chuzu_idcard, zuke, zuke_idcard, fromdate, todate, house_id, payday
    </sql>
    <select id="selectByExample" parameterType="com.fc.bean.HetongExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from hetong
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from hetong
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from hetong
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.fc.bean.HetongExample">
        delete from hetong
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.fc.bean.Hetong">
        insert into hetong (id, chuzu, chuzu_idcard,
                            zuke, zuke_idcard, fromdate,
                            todate, house_id, payday)
        values (#{id,jdbcType=INTEGER}, #{chuzu,jdbcType=VARCHAR}, #{chuzuIdcard,jdbcType=VARCHAR},
                #{zuke,jdbcType=VARCHAR}, #{zukeIdcard,jdbcType=VARCHAR}, #{fromdate,jdbcType=VARCHAR},
                #{todate,jdbcType=VARCHAR}, #{houseId,jdbcType=VARCHAR}, #{payday,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.fc.bean.Hetong">
        insert into hetong
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="chuzu != null">
                chuzu,
            </if>
            <if test="chuzuIdcard != null">
                chuzu_idcard,
            </if>
            <if test="zuke != null">
                zuke,
            </if>
            <if test="zukeIdcard != null">
                zuke_idcard,
            </if>
            <if test="fromdate != null">
                fromdate,
            </if>
            <if test="todate != null">
                todate,
            </if>
            <if test="houseId != null">
                house_id,
            </if>
            <if test="payday != null">
                payday,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="chuzu != null">
                #{chuzu,jdbcType=VARCHAR},
            </if>
            <if test="chuzuIdcard != null">
                #{chuzuIdcard,jdbcType=VARCHAR},
            </if>
            <if test="zuke != null">
                #{zuke,jdbcType=VARCHAR},
            </if>
            <if test="zukeIdcard != null">
                #{zukeIdcard,jdbcType=VARCHAR},
            </if>
            <if test="fromdate != null">
                #{fromdate,jdbcType=VARCHAR},
            </if>
            <if test="todate != null">
                #{todate,jdbcType=VARCHAR},
            </if>
            <if test="houseId != null">
                #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="payday != null">
                #{payday,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.fc.bean.HetongExample" resultType="java.lang.Long">
        select count(*) from hetong
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update hetong
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.chuzu != null">
                chuzu = #{record.chuzu,jdbcType=VARCHAR},
            </if>
            <if test="record.chuzuIdcard != null">
                chuzu_idcard = #{record.chuzuIdcard,jdbcType=VARCHAR},
            </if>
            <if test="record.zuke != null">
                zuke = #{record.zuke,jdbcType=VARCHAR},
            </if>
            <if test="record.zukeIdcard != null">
                zuke_idcard = #{record.zukeIdcard,jdbcType=VARCHAR},
            </if>
            <if test="record.fromdate != null">
                fromdate = #{record.fromdate,jdbcType=VARCHAR},
            </if>
            <if test="record.todate != null">
                todate = #{record.todate,jdbcType=VARCHAR},
            </if>
            <if test="record.houseId != null">
                house_id = #{record.houseId,jdbcType=VARCHAR},
            </if>
            <if test="record.payday != null">
                payday = #{record.payday,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update hetong
        set id = #{record.id,jdbcType=INTEGER},
        chuzu = #{record.chuzu,jdbcType=VARCHAR},
        chuzu_idcard = #{record.chuzuIdcard,jdbcType=VARCHAR},
        zuke = #{record.zuke,jdbcType=VARCHAR},
        zuke_idcard = #{record.zukeIdcard,jdbcType=VARCHAR},
        fromdate = #{record.fromdate,jdbcType=VARCHAR},
        todate = #{record.todate,jdbcType=VARCHAR},
        house_id = #{record.houseId,jdbcType=VARCHAR},
        payday = #{record.payday,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.fc.bean.Hetong">
        update hetong
        <set>
            <if test="chuzu != null">
                chuzu = #{chuzu,jdbcType=VARCHAR},
            </if>
            <if test="chuzuIdcard != null">
                chuzu_idcard = #{chuzuIdcard,jdbcType=VARCHAR},
            </if>
            <if test="zuke != null">
                zuke = #{zuke,jdbcType=VARCHAR},
            </if>
            <if test="zukeIdcard != null">
                zuke_idcard = #{zukeIdcard,jdbcType=VARCHAR},
            </if>
            <if test="fromdate != null">
                fromdate = #{fromdate,jdbcType=VARCHAR},
            </if>
            <if test="todate != null">
                todate = #{todate,jdbcType=VARCHAR},
            </if>
            <if test="houseId != null">
                house_id = #{houseId,jdbcType=VARCHAR},
            </if>
            <if test="payday != null">
                payday = #{payday,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fc.bean.Hetong">
        update hetong
        set chuzu        = #{chuzu,jdbcType=VARCHAR},
            chuzu_idcard = #{chuzuIdcard,jdbcType=VARCHAR},
            zuke         = #{zuke,jdbcType=VARCHAR},
            zuke_idcard  = #{zukeIdcard,jdbcType=VARCHAR},
            fromdate     = #{fromdate,jdbcType=VARCHAR},
            todate       = #{todate,jdbcType=VARCHAR},
            house_id     = #{houseId,jdbcType=VARCHAR},
            payday       = #{payday,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
<!--    通过house_id查看合同-->
    <select id="showHeTong" resultMap="BaseResultMap">
        select * from hetong he inner join houselist house on he.house_id=house.houseid inner join zulist z on he.house_id = z.house_id where z.house_id=#{house_id}
    </select>
<!--    修改合同-->
    <update id="updateHeTong" parameterType="com.fc.bean.Hetong">
        update hetong he inner join houselist house on he.house_id=house.houseid
        set house.address=#{hetong.houselist.address},he.chuzu=#{hetong.chuzu},he.chuzu_idcard=#{hetong.chuzuIdcard},he.zuke=#{hetong.zuke},he.zuke_idcard=#{hetong.zukeIdcard},he.fromdate=#{hetong.fromdate},he.todate=#{hetong.todate},house.price=#{hetong.houselist.price},he.payday=#{hetong.payday}
        where he.house_id=#{hetong.houseId}
    </update>
<!--    终止合同-->
    <delete id="deleteHeTong" parameterType="java.lang.Integer">
        delete he,z from hetong as he inner join zulist z on he.house_id = z.house_id where z.house_id=#{houseId}
    </delete>
<!--    添加已退租信息-->
<!--    <insert id="insertCheckout" parameterType="java.lang.Integer">-->
<!--        insert into checkout  (house_id, userlist_id) select h.houseid,user_id from checkout c inner join houselist h on h.houseid=c.house_id inner join userlist u on c.userlist_id = u.id where house_id=#{house_id}-->
<!--    </insert>-->
<!--    添加合同-->

</mapper>